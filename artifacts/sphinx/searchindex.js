Search.setIndex({"docnames": ["autoapi/covariance/covariance_combination/index", "autoapi/covariance/ewma/index", "autoapi/covariance/index", "autoapi/covariance/iterated_ewma/index", "autoapi/covariance/log_likelihood/index", "autoapi/covariance/optimal_cov_pred/index", "autoapi/covariance/predictors/index", "autoapi/covariance/trading_model/index", "autoapi/covariance/utils/index", "autoapi/covariance/utils_old/index", "autoapi/index", "index", "license"], "filenames": ["autoapi/covariance/covariance_combination/index.rst", "autoapi/covariance/ewma/index.rst", "autoapi/covariance/index.rst", "autoapi/covariance/iterated_ewma/index.rst", "autoapi/covariance/log_likelihood/index.rst", "autoapi/covariance/optimal_cov_pred/index.rst", "autoapi/covariance/predictors/index.rst", "autoapi/covariance/trading_model/index.rst", "autoapi/covariance/utils/index.rst", "autoapi/covariance/utils_old/index.rst", "autoapi/index.rst", "index.rst", "license.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.covariance_combination</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.ewma</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.iterated_ewma</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.log_likelihood</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.optimal_cov_pred</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.predictors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.trading_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">covariance.utils_old</span></code>", "API Reference", "API Documentation", "License"], "terms": {"result": [0, 7], "sourc": [0, 1, 3, 5, 6, 7, 8, 9], "covariancecombin": 0, "sigma": [0, 5, 6, 7, 8, 9], "return": [0, 1, 3, 5, 6, 7, 8, 9], "mean": [0, 1, 3, 7, 8, 9], "none": [0, 1, 3, 6, 7, 8, 9], "properti": 0, "k": 0, "self": [0, 6, 7], "index": [0, 6], "asset": [0, 3, 6, 7, 8, 9], "solv": [0, 7, 9], "time": [0, 3, 6, 9], "window": [0, 9], "10": [0, 6, 9], "kwarg": 0, "combin": [0, 9], "problem": [0, 6, 7, 9], "given": [0, 5, 7, 9], "i": [0, 3, 9], "e": [0, 3, 7, 9], "find": 0, "predict": [0, 3, 9], "matrix": [0, 3, 5, 6, 7, 8, 9], "1": [0, 3, 5, 6, 7, 8, 9, 10], "solve_window": 0, "verbos": 0, "true": [0, 6, 9], "all": [0, 9], "timestep": 0, "iewma": [1, 3], "varianc": [1, 3, 7, 9], "halflif": [1, 3], "min_period": [1, 3, 8], "0": [1, 6, 7, 9], "clip_at": [1, 3], "volatil": [1, 3, 7, 9], "iterated_ewma": [1, 2, 10], "vola_halflif": [1, 3], "cov_halflif": [1, 3], "lower": [1, 3], "upper": [1, 3, 8, 9], "min_periods_vola": [1, 3], "20": [1, 3, 6, 8], "min_periods_cov": [1, 3], "fals": [1, 3, 5, 6, 7, 9], "low_rank": [1, 3], "ewma_cov": 1, "data": [1, 3, 6, 8, 9], "ewma_mean": 1, "covariance_combin": [2, 10], "ewma": [2, 3, 9, 10], "log_likelihood": [2, 8, 9, 10], "optimal_cov_pr": [2, 10], "predictor": [2, 9, 10], "trading_model": [2, 10], "util": [2, 10], "utils_old": [2, 10], "get_next_ewma": [3, 9], "y_last": [3, 9], "t": [3, 5, 9], "beta": [3, 9], "param": [3, 5, 6, 7, 8, 9], "observ": [3, 6, 9], "current": [3, 9], "step": [3, 6, 9], "exponenti": [3, 9], "forget": [3, 9], "paramet": [3, 7, 9], "clip": 3, "option": [3, 7], "estim": [3, 9], "note": [3, 7, 9], "thi": [3, 9, 10], "doe": [3, 9], "depend": [3, 9], "y_t": [3, 9], "y": [3, 6, 9], "arrai": [3, 5, 6, 8, 9], "measur": [3, 9], "2": [3, 8, 9], "len": [3, 9], "half": [3, 9], "life": [3, 9], "list": [3, 5, 7, 9], "3": [3, 9], "we": [3, 7, 9], "defin": [3, 9], "ewma_t": [3, 9], "up": [3, 9], "y_1": [3, 9], "y_2": [3, 9], "some": [3, 9], "while": [3, 9], "ewma_2": [3, 9], "ewma_3": [3, 9], "ewma_": [3, 9], "wai": [3, 6, 9], "don": [3, 9], "get": [3, 9], "look": [3, 9], "ahead": [3, 9], "bia": [3, 9], "panda": [3, 5, 9], "datafram": [3, 5, 9], "each": [3, 6, 8, 9], "bound": 3, "adjust": [3, 7], "cutoff": 3, "min_preiods_vola": 3, "minimum": [3, 7], "number": [3, 9], "period": 3, "us": [3, 9], "whether": [3, 9], "assum": [3, 8, 9], "zero": [3, 6, 8, 9], "rank": 3, "low": 3, "compon": 3, "correl": [3, 9], "approxim": 3, "perform": 3, "sigma_t": [3, 7], "standard": 3, "deviat": 3, "dictionari": [3, 6, 8], "dai": [3, 6, 9], "kei": 3, "correspond": [3, 9], "follow": [3, 9], "next": [3, 6], "get_sigmas_from_lt": 5, "lt": [5, 7], "n": [5, 6, 8, 9], "matric": [5, 6, 8, 9], "overtriangular": 5, "part": [5, 8, 9], "l": [5, 6, 9], "where": [5, 6, 8, 9], "get_l_multi": 5, "r": [5, 6, 7, 9], "x": [5, 6, 9], "cvxpy": [5, 7, 9], "transpos": [5, 6, 9], "choleski": [5, 6, 9], "precis": [5, 6, 9], "varbiabl": 5, "get_prob_multi": 5, "t_half": [5, 6, 9], "lamda": [5, 6, 8], "monthly_upd": 5, "quarterly_upd": 5, "frob_lim": 5, "1000": 5, "covariancepredictor": 6, "whiten_return": 6, "get_theta_hat": 6, "start_dat": [6, 9], "end_dat": [6, 9], "creat": [6, 10], "start": 6, "init_cutoff": 6, "avoid": 6, "singular": 6, "altern": 6, "other": 6, "like": [6, 9], "sigma_hat": [6, 7, 9], "etc": 6, "match": 6, "theta_hat": 6, "get_lt_hat": 6, "factor": [6, 7], "lt_hat": [6, 9], "also": 6, "get_log_likelihood_helper_": 6, "end": 6, "mu": [6, 9], "numpi": [6, 8, 9], "shape": [6, 9], "batch_siz": 6, "set": [6, 9], "log": [6, 8, 9], "likelihood": [6, 9], "under": [6, 9], "multivari": [6, 9], "normal": [6, 9], "distribut": [6, 9], "get_log_likelihood": [6, 9], "integ": 6, "pd": [6, 9], "to_date_tim": 6, "object": [6, 7, 9], "gaussian": [6, 8, 9], "mgarchpredictor": 6, "base": 6, "goldstandard": 6, "method": 6, "sample_ful": 6, "50": 6, "constantpredictor": 6, "train_frac": 6, "weightedgmmpredictor": 6, "n_gmm_comp": 6, "ar": [6, 7, 8, 9], "yearly_model": 6, "get_yearly_gmm": 6, "n_comp": 6, "5": 6, "dict": [6, 9], "yearli": [6, 9], "gmm": 6, "static": 6, "get_markov_ar": 6, "markov": 6, "represent": [6, 9], "incoorpor": 6, "probabl": [6, 9], "constraint": [6, 7], "rollingwindowpredictor": 6, "memori": [6, 8], "update_freq": [6, 9], "ewmapredictor": 6, "alternatingpredictor": 6, "an": 6, "between": 6, "sever": 6, "chosen": 6, "past": [6, 9], "likelihood_memori": 6, "get_optimal_predictor": 6, "ind": 6, "ensemblepredictor": 6, "expert": 6, "pred_typ": 6, "best": 6, "alternatingiteratedewmapredictor": 6, "alternatingewmapredictor": 6, "compute_opt_sigma": 6, "iteratedewmapredictor": 6, "t_half_scal": 6, "t_half_ful": 6, "iteratedgarchewmapredictor": 6, "cheat": 6, "alternatingiteratedgarchewmapredictor": 6, "trippleiteratedewmapredictor": 6, "t_half_std": 6, "alternatingweightedpredictor": 6, "alternating_typ": 6, "const_theta": [6, 9], "const_l": [6, 9], "ignore_dpp": [6, 9], "turnover_con": [6, 9], "get_sigma_hat": 6, "trader": 7, "lt_inv_hat": 7, "r_hat": 7, "solve_min_risk": 7, "prob": [7, 9], "w": [7, 9], "l_inv_param": 7, "lt_inv": [7, 9], "sigma_param": 7, "risk": 7, "whiten": [7, 9], "variabl": [7, 9], "lt_inv_param": 7, "solve_risk_par": 7, "pariti": 7, "sigma_t_param": 7, "solve_mean_vari": 7, "r_hat_param": 7, "get_vol_cont_w": 7, "ws": [7, 9], "obj": 7, "sigma_d": 7, "comput": [7, 8, 9], "weight": [7, 9], "control": 7, "portfolio": 7, "valu": 7, "desir": 7, "solve_max_divers": 7, "z": 7, "l_inv": 7, "maximum": 7, "diversif": 7, "optim": [7, 9, 12], "invers": [7, 9], "diagon": [7, 8, 9], "solve_max_sharp": 7, "dilute_with_cash": 7, "dilut": 7, "cash": 7, "achiev": 7, "get_risk_adj_return": 7, "scale": 7, "level": 7, "get_risk_adj_portfolio_growth": 7, "growth": 7, "from": 7, "daili": [7, 9], "total": 7, "backtest": 7, "portfolio_typ": 7, "min_risk": 7, "con": 7, "adjust_factor": 7, "additonal_con": 7, "short_lim": 7, "6": 7, "upper_bound": 7, "15": 7, "lower_bound": 7, "c_speedup": 7, "kappa": 7, "type": 7, "vol_cont": 7, "risk_par": 7, "mean_vari": 7, "impos": 7, "get_total_return": 7, "diluted_with_cash": 7, "rf": 7, "indivud": 7, "get_portfolio_growth": 7, "run": 7, "first": 7, "compute_max_drawdown": 7, "drawdown": 7, "get_metr": [7, 9], "excess": 7, "g": 7, "have": [7, 9], "model": [7, 9], "100": 7, "r_daili": 7, "should": 7, "sqrt": 7, "avg": 7, "stdev": 7, "sharp": 7, "ratio": 7, "max": 7, "likelihhod": 8, "vector": [8, 9], "row": [8, 9], "rolling_window": 8, "from_row_to_covari": [8, 9], "convert": [8, 9], "from_row_matrix_to_covari": [8, 9], "m": [8, 9], "tx": [8, 9], "txnxn": [8, 9], "regularize_covari": 8, "add": 8, "diag": [8, 9], "scalar": 8, "ecdf": [8, 9], "get_turnov": 9, "gaussian_likelihood": 9, "get_posterior_prob": 9, "posterior": 9, "get_frob_chang": 9, "frobeniu": 9, "norm": 9, "chang": 9, "divid": 9, "get_ar_format": 9, "plot_ewma_log_likelihood": 9, "63": 9, "label": 9, "with_opt": 9, "plot_ecdf": 9, "one": 9, "dimension": 9, "metric": 9, "get_yearly_garch_param": 9, "garch": 9, "strictli": 9, "speak": 9, "updat": 9, "everi": 9, "year": 9, "moving_averag": 9, "size": 9, "move": 9, "averag": 9, "get_hi": 9, "hi": 9, "featur": 9, "get_lo": 9, "lo": 9, "get_po": 9, "posit": 9, "get_neg": 9, "neg": 9, "get_featur": 9, "val_end": 9, "8": 9, "engin": 9, "get_r": 9, "r_whitenen": 9, "realiz": 9, "over": 9, "get_v_hat": 9, "vol": 9, "cp_get_log_likelihood": 9, "theta": 9, "max_log_likelihood_const_l": 9, "lt_param": 9, "lt_times_r_vec_param": 9, "lt_times_r_vec": 9, "prob_num": 9, "candid": 9, "li": 9, "sigma_i": 9, "preciss": 9, "th": 9, "maxim": 9, "constant": 9, "max_log_likelihood_varying_l": 9, "max_log_likelihood": 9, "prec_param": 9, "prec_at_cov_param": 9, "prec_at_cov": 9, "max_log_likelihood_const_theta": 9, "comparison": 9, "get_overtriangular": 9, "triangular": 9, "includ": 9, "get_overtriangular_stack": 9, "ms": 9, "get_vectorform": 9, "form": 9, "elementwis": 9, "max_log_likelihood_varying_l2": 9, "p_param": 9, "onest_a_param": 9, "p": 9, "onest_a": 9, "get_opt_weights_new": 9, "likelihood_window": 9, "w_init": 9, "initi": 9, "convex": [9, 12], "get_opt_weights_old": 9, "theta_param": 9, "choos": 9, "what": 9, "would": 9, "last": 9, "so": 9, "can": 9, "date": 9, "which": 9, "want": 9, "get_realized_cov": 9, "ha": 9, "r_t": 9, "multipl": 9, "get_realized_var": 9, "from_cov_to_corr": 9, "get_realized_s": 9, "tr_t": 9, "get_ewma": 9, "get_r_tild": 9, "ll": 9, "r_tilde_hat": 9, "get_choleski": 9, "decomposit": 9, "get_avg_likelihood": 9, "dimensin": 9, "get_daily_likelihood": 9, "in_parallel": 9, "page": 10, "contain": 10, "auto": 10, "gener": 10, "document": 10, "covari": [10, 11], "sphinx": 10, "autoapi": 10, "licens": 11, "refer": 11, "submodul": 11, "copyright": 12, "c": 12, "2023": 12, "stanford": 12, "univers": 12, "group": 12}, "objects": {"": [[2, 0, 0, "-", "covariance"]], "covariance": [[0, 0, 0, "-", "covariance_combination"], [1, 0, 0, "-", "ewma"], [3, 0, 0, "-", "iterated_ewma"], [4, 0, 0, "-", "log_likelihood"], [5, 0, 0, "-", "optimal_cov_pred"], [6, 0, 0, "-", "predictors"], [7, 0, 0, "-", "trading_model"], [8, 0, 0, "-", "utils"], [9, 0, 0, "-", "utils_old"]], "covariance.covariance_combination": [[0, 1, 1, "", "CovarianceCombination"], [0, 3, 1, "", "Result"]], "covariance.covariance_combination.CovarianceCombination": [[0, 2, 1, "", "K"], [0, 2, 1, "", "assets"], [0, 2, 1, "", "index"], [0, 2, 1, "", "solve"], [0, 2, 1, "", "solve_window"]], "covariance.ewma": [[1, 3, 1, "", "IEWMA"], [1, 4, 1, "", "ewma_cov"], [1, 4, 1, "", "ewma_mean"], [1, 4, 1, "", "iterated_ewma"], [1, 4, 1, "", "variance"], [1, 4, 1, "", "volatility"]], "covariance.iterated_ewma": [[3, 3, 1, "", "IEWMA"], [3, 4, 1, "", "ewma"], [3, 4, 1, "", "get_next_ewma"], [3, 4, 1, "", "iterated_ewma"]], "covariance.optimal_cov_pred": [[5, 4, 1, "", "get_Sigmas_from_Lts"], [5, 4, 1, "", "get_l_multi"], [5, 4, 1, "", "get_prob_multi"]], "covariance.predictors": [[6, 1, 1, "", "AlternatingEwmaPredictor"], [6, 1, 1, "", "AlternatingIteratedEwmaPredictor"], [6, 1, 1, "", "AlternatingIteratedGarchEwmaPredictor"], [6, 1, 1, "", "AlternatingPredictor"], [6, 1, 1, "", "AlternatingWeightedPredictor"], [6, 1, 1, "", "ConstantPredictor"], [6, 1, 1, "", "CovariancePredictor"], [6, 1, 1, "", "EnsemblePredictor"], [6, 1, 1, "", "EwmaPredictor"], [6, 1, 1, "", "GoldStandard"], [6, 1, 1, "", "IteratedEwmaPredictor"], [6, 1, 1, "", "IteratedGarchEwmaPredictor"], [6, 1, 1, "", "MgarchPredictor"], [6, 1, 1, "", "RollingWindowPredictor"], [6, 1, 1, "", "TrippleIteratedEwmaPredictor"], [6, 1, 1, "", "WeightedGMMPredictor"]], "covariance.predictors.AlternatingPredictor": [[6, 2, 1, "", "get_optimal_predictors"]], "covariance.predictors.AlternatingWeightedPredictor": [[6, 2, 1, "", "get_Sigma_hats"]], "covariance.predictors.CovariancePredictor": [[6, 2, 1, "", "get_Lt_hats"], [6, 2, 1, "", "get_Theta_hats"], [6, 2, 1, "", "get_log_likelihood_helper_"], [6, 2, 1, "", "get_log_likelihoods"], [6, 2, 1, "", "whiten_returns"]], "covariance.predictors.WeightedGMMPredictor": [[6, 2, 1, "", "get_markov_ar"], [6, 2, 1, "", "get_yearly_gmms"]], "covariance.trading_model": [[7, 1, 1, "", "Trader"]], "covariance.trading_model.Trader": [[7, 2, 1, "", "backtest"], [7, 2, 1, "", "compute_max_drawdown"], [7, 2, 1, "", "dilute_with_cash"], [7, 2, 1, "", "get_metrics"], [7, 2, 1, "", "get_portfolio_growth"], [7, 2, 1, "", "get_risk_adj_portfolio_growth"], [7, 2, 1, "", "get_risk_adj_returns"], [7, 2, 1, "", "get_total_returns"], [7, 2, 1, "", "get_vol_cont_w"], [7, 2, 1, "", "solve_max_diverse"], [7, 2, 1, "", "solve_max_sharpe"], [7, 2, 1, "", "solve_mean_variance"], [7, 2, 1, "", "solve_min_risk"], [7, 2, 1, "", "solve_risk_parity"]], "covariance.utils": [[8, 4, 1, "", "ecdf"], [8, 4, 1, "", "from_row_matrix_to_covariance"], [8, 4, 1, "", "from_row_to_covariance"], [8, 4, 1, "", "log_likelihood"], [8, 4, 1, "", "regularize_covariance"], [8, 4, 1, "", "rolling_window"]], "covariance.utils_old": [[9, 4, 1, "", "Gaussian_likelihood"], [9, 4, 1, "", "cp_get_log_likelihood"], [9, 4, 1, "", "from_cov_to_corr"], [9, 4, 1, "", "from_row_matrix_to_covariance"], [9, 4, 1, "", "from_row_to_covariance"], [9, 4, 1, "", "get_R"], [9, 4, 1, "", "get_V_hats"], [9, 4, 1, "", "get_ar_format"], [9, 4, 1, "", "get_avg_likelihood"], [9, 4, 1, "", "get_cholesky"], [9, 4, 1, "", "get_daily_likelihood"], [9, 4, 1, "", "get_ewmas"], [9, 4, 1, "", "get_features"], [9, 4, 1, "", "get_frob_change"], [9, 4, 1, "", "get_hi"], [9, 4, 1, "", "get_lo"], [9, 4, 1, "", "get_log_likelihood"], [9, 4, 1, "", "get_metrics"], [9, 4, 1, "", "get_neg"], [9, 4, 1, "", "get_next_ewma"], [9, 4, 1, "", "get_opt_weights_new"], [9, 4, 1, "", "get_opt_weights_old"], [9, 4, 1, "", "get_overtriangular"], [9, 4, 1, "", "get_overtriangular_stack"], [9, 4, 1, "", "get_pos"], [9, 4, 1, "", "get_posterior_probs"], [9, 4, 1, "", "get_r_tildes"], [9, 4, 1, "", "get_realized_covs"], [9, 4, 1, "", "get_realized_sizes"], [9, 4, 1, "", "get_realized_vars"], [9, 4, 1, "", "get_turnover"], [9, 4, 1, "", "get_vectorform"], [9, 4, 1, "", "get_yearly_garch_params"], [9, 4, 1, "", "max_log_likelihood"], [9, 4, 1, "", "max_log_likelihood_const_L"], [9, 4, 1, "", "max_log_likelihood_const_theta"], [9, 4, 1, "", "max_log_likelihood_varying_L"], [9, 4, 1, "", "max_log_likelihood_varying_L2"], [9, 4, 1, "", "moving_average"], [9, 4, 1, "", "plot_ecdf"], [9, 4, 1, "", "plot_ewma_log_likelihoods"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"]}, "titleterms": {"covari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "covariance_combin": 0, "modul": [0, 1, 3, 5, 6, 7, 8, 9], "content": [0, 1, 3, 5, 6, 7, 8, 9], "class": [0, 6, 7], "attribut": [0, 1, 3], "ewma": 1, "function": [1, 3, 5, 8, 9], "submodul": 2, "iterated_ewma": 3, "log_likelihood": 4, "optimal_cov_pr": 5, "predictor": 6, "trading_model": 7, "util": 8, "utils_old": 9, "api": [10, 11], "refer": 10, "document": 11, "licens": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})