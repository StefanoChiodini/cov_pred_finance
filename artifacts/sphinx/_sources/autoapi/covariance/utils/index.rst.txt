:py:mod:`covariance.utils`
==========================

.. py:module:: covariance.utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   covariance.utils.log_likelihood
   covariance.utils.rolling_window
   covariance.utils.from_row_to_covariance
   covariance.utils.from_row_matrix_to_covariance
   covariance.utils.regularize_covariance
   covariance.utils.ecdf
   covariance.utils.create_table



.. py:function:: log_likelihood(returns, Sigmas, means=None)

   Computes the log likelihhod assuming Gaussian returns with covariance matrix
   Sigmas and mean vector means

   param returns: numpy array where rows are vector of asset returns
   param Sigmas: numpy array of covariance matrix
   param means: numpy array of mean vector; if None, assumes zero mean


.. py:function:: rolling_window(returns, memory, min_periods=20)


.. py:function:: from_row_to_covariance(row, n)

   Convert upper diagonal part of covariance matrix to a covariance matrix


.. py:function:: from_row_matrix_to_covariance(M, n)

   Convert Tx(n(n+1)/2) matrix of upper diagonal parts of covariance matrices to a Txnxn matrix of covariance matrices


.. py:function:: regularize_covariance(Sigmas, lamda)

   Adds lamda*diag(Sigma) to each covariance (Sigma) matrix in Sigmas

   param Sigmas: dictionary of covariance matrices
   param lamda: scalar


.. py:function:: ecdf(data)


.. py:function:: create_table(metrics)


